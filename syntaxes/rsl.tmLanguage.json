{
    "scopeName": "source.rsl",
    
    "patterns": [
        { "include": "#comments"},
        { "include": "#preprocessor"},
        { "include": "#definition"},
        { "include": "#keywords"},
        { "include": "#expressions"}
    ],

    "repository": {
        "expressions": {
            "patterns": [
                {"include": "#number"},
                {"include": "#constants"}
            ]
        },
        "definition": {
            "patterns": [
                {"include": "#func_call"}
            ]
        },
        "keywords": {
            "patterns": [
                {"include": "#loop_control"},
                {"include": "#loop_mod"},
                {"include": "#conditional"},
                {"include": "#return"},
                {"include": "#var_modifiers_1"},
                {"include": "#var_modifiers_2"},
                {"include": "#type"},
                {"include": "#shader_type"},
                {"include": "#operators"}
            ]
        },
        "comments": {
            "patterns": [
                {"include": "#single_line_comment"},
                {"include": "#multi_line_comment"}
            ]
        },
        "preprocessor": {
            "patterns": [
                {
                    "name": "meta.preprocessor.rsl",
                    "match": "^(#\\w+)"
                }
            ]
        },

        "func_definition": {
            "match": "^(\\w+)\\s+(\\w+)\\s*\\(.*[^;]",
            "captures": {
                "1": { "patterns": [{"include": "#shader_type"}, {"include": "#type"}] },
                "2": { "name": "entity.name.function.rsl"}
            }
        },
        "func_call": {
            "begin": "(\\w+)\\s*\\(",
            "beginCaptures": {
                "1": { "name": "variable.function.rsl" }
            },
            "end": "\\)",

            "patterns": [
                {"include": "$self"}
            ]
        },
        "shader_type": {
            "name": "storage.type.function.rsl",
            "match": "\\b(light|surface|volume|displacement|imager)\\b"
        },
        "var_modifiers_1": {
            "name": "storage.modifier.rsl",
            "match": "\\b(output|extern)\\b"
        },
        "var_modifiers_2": {
            "name": "storage.modifier.rsl",
            "match": "\\b(varying|uniform)\\b"
        },
        "type": {
            "name": "storage.type.rsl",
            "match": "\\b(float|string|color|point|vector|normal|matrix|void)\\b"
        },
        "number": {
            "name": "constant.numeric.rsl",
            "match": "\\b\\d+\\.?\\d?+\\b"
        },

        "loop_control": {
            "name": "keyword.control.rsl",
            "match": "\\b(while|for|gather|solar|illuminate|illuminance)\\b"
        },
        "conditional": {
            "name": "keyword.control.conditional.rsl",
            "match": "\\b(if|else)\\b"
        },

        "return": {
            "name": "keyword.control.rsl",
            "match": "\\b(return)\\b"
        },
        "constants": {
            "name": "variable.other.constant.rsl",
            "match": "\\b([A-Z_]+[A-Z0-9_]+)\\b"
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.assignment.rsl",
                    "match": "([+\\-*/]?=)"
                },
                {
                    "name": "keyword.operator.arithmetic.rsl",
                    "match": "([+\\-\\./*\\^])"
                }
            ]
        },

        "single_line_comment": {
            "match": "(//).*$",
            "captures": {
                "0": { "name": "comment.line.rsl" },
                "1": { "name": "punctuation.definition.comment.rsl" }
            }
        },
        "multi_line_comment": {
            "begin": "(/\\*)",
            "end": "(\\*/)",
            "beginCaptures": { "1": "punctuation.definition.comment.rsl"},
            "endCaptures": { "1": "punctuation.definition.comment.rsl"},
            "name": "comment.block.rsl"
        }
    }
}